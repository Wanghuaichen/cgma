
# UseACIS.cmake 
# sets the following variables for use
# ACIS_INCLUDE_DIR
# ACIS_LIBRARY_DIR
# ACIS_LIBRARY_DIR_DEBUG
# ACIS_LIBS, ACIS_DEBUG_LIBS, ACIS_RELEASE_LIBS
# also automatically add -D definitions for compiling


IF(UNIX)
  SET(CUBITROOT $ENV{CUBIT})
ELSE(UNIX)
  SET(CUBITROOT $ENV{CUBITROOT})
ENDIF(UNIX)

STRING(REGEX REPLACE "\\\\" "/" CUBITROOT "${CUBITROOT}")

# allow override of ACIS_DIR
IF(NOT MYOWN_ACIS_DIR)
  SET(MYOWN_ACIS_DIR "" CACHE PATH "")
ENDIF(NOT MYOWN_ACIS_DIR)
IF(MYOWN_ACIS_DIR)
  SET(ACIS_DIR ${MYOWN_ACIS_DIR})
ENDIF(MYOWN_ACIS_DIR)

# if ACIS_DIR isn't set yet, then we'll set the default
IF(NOT ACIS_DIR)
  IF(CMAKE_SYSTEM MATCHES "IRIX")
    SET(ACIS_DIR ${CUBITROOT}/acis/acis14.1)
  ELSE(CMAKE_SYSTEM MATCHES "IRIX")
    IF(CMAKE_SYSTEM MATCHES "Darwin")
      SET(ACIS_DIR ${CUBITROOT}/acis/acis16.3)
    ELSE(CMAKE_SYSTEM MATCHES "Darwin")
      SET(ACIS_DIR ${CUBITROOT}/acis/acis16.1)
    ENDIF(CMAKE_SYSTEM MATCHES "Darwin")
  ENDIF(CMAKE_SYSTEM MATCHES "IRIX")
ENDIF(NOT ACIS_DIR)

# allow override of acis version
IF(NOT MYOWN_ACIS_VERSION)
  SET(MYOWN_ACIS_VERSION "" CACHE STRING "")
ENDIF(NOT MYOWN_ACIS_VERSION)
IF(MYOWN_ACIS_VERSION)
  SET(ACIS_VERSION ${MYOWN_ACIS_VERSION})
ENDIF(MYOWN_ACIS_VERSION)

# default to version 1601, 1401 for SGI, 1603 for Mac
IF(NOT ACIS_VERSION)
  IF(CMAKE_SYSTEM MATCHES "IRIX")
    SET(ACIS_VERSION 1401)
  ELSE(CMAKE_SYSTEM MATCHES "IRIX")
    IF(CMAKE_SYSTEM MATCHES "Darwin")
      SET(ACIS_VERSION 1603)
    ELSE(CMAKE_SYSTEM MATCHES "Darwin")
      SET(ACIS_VERSION 1601)
    ENDIF(CMAKE_SYSTEM MATCHES "Darwin")
  ENDIF(CMAKE_SYSTEM MATCHES "IRIX")
ENDIF(NOT ACIS_VERSION)


# set the include directory
SET (ACIS_INCLUDE_DIR ${ACIS_DIR}/include)

SET(ACIS_LIBS)

IF(NOT BUILD_64)
OPTION(ACIS_STEP "Build with ACIS STEP Translator" ON)
IF(ACIS_STEP)
  ADD_DEFINITIONS(-DACIS_STEP_TRANSLATOR)
  SET(ACIS_LIBS ${ACIS_LIBS} acisstep xstep)
ENDIF(ACIS_STEP)
ENDIF(NOT BUILD_64)

IF(NOT BUILD_64)
OPTION(ACIS_IGES "Build with ACIS IGES Translator" ON)
IF(ACIS_IGES)
  ADD_DEFINITIONS(-DACIS_IGES_TRANSLATOR)
  SET(ACIS_LIBS ${ACIS_LIBS} acisiges xiges)
ENDIF(ACIS_IGES)
ENDIF(NOT BUILD_64)

#IF(NOT BUILD_64)
#OPTION(ACIS_HEALER "Build with ACIS Healer" ON)
##IF(ACIS_HEALER)
  ADD_DEFINITIONS(-DACIS_HEALER)
  # hmm  what are the healer libs?
  #SET(ACIS_LIBS ${ACIS_LIBS} xiges acisiges)
#ENDIF(ACIS_HEALER)
#ENDIF(NOT BUILD_64)


IF(NOT BUILD_64)
  IF(ACIS_STEP OR ACIS_IGES)
    SET(ACIS_LIBS ${ACIS_LIBS} xacis2k xcore2k SPAXAcisBase SPAXAssemblyRep SPAXDefaultGeometryRep SPAXInterop SPAXBase )
    IF(ACIS_VERSION GREATER 1600)
      SET(ACIS_LIBS ${ACIS_LIBS} SPAXGeometryRepresentation)
    ENDIF(ACIS_VERSION GREATER 1600)
  ENDIF(ACIS_STEP OR ACIS_IGES)
ENDIF(NOT BUILD_64)

SET(ACIS_LIBS ${ACIS_LIBS}
              SpaAVis SpaAWarp SpaASurf SpaALops SpaABlend SpaACIS SpaBase )


IF(WIN32)
# .Net acis libs have n in their names
  IF(NOT ${CMAKE_GENERATOR} MATCHES "Visual Studio 6")
    SET(ACIS_LIB_SUFFIX n)
    SET(ACIS_DIR_ADD _NET)
  ENDIF(NOT ${CMAKE_GENERATOR} MATCHES "Visual Studio 6")
  
  SET(TMP_ACIS_LIB_DIR ${ACIS_DIR}/lib)
  SET(ACIS_LIBRARY_DIR ${ACIS_DIR}/lib/NT${ACIS_DIR_ADD}_DLL)
  SET(ACIS_LIBRARY_DIR_DEBUG ${ACIS_DIR}/lib/NT${ACIS_DIR_ADD}_DLLD)
  SET(ACIS_DEBUG_LIBS)
  SET(ACIS_RELEASE_LIBS)
  
  FOREACH(var ${ACIS_LIBS})
    SET(ACIS_DEBUG_LIBS ${ACIS_DEBUG_LIBS} ${var}${ACIS_LIB_SUFFIX}d)
             
    SET(ACIS_RELEASE_LIBS ${ACIS_RELEASE_LIBS} ${var}${ACIS_LIB_SUFFIX})
  ENDFOREACH(var ${ACIS_LIBS})
  SET(ACIS_LIBS)
  FOREACH(var ${ACIS_DEBUG_LIBS})
    SET(ACIS_LIBS ${ACIS_LIBS} debug ${var})
  ENDFOREACH(var ${ACIS_DEBUG_LIBS})
  FOREACH(var ${ACIS_RELEASE_LIBS})
    SET(ACIS_LIBS ${ACIS_LIBS} optimized ${var})
  ENDFOREACH(var ${ACIS_RELEASE_LIBS})
  
ENDIF(WIN32)

IF(UNIX)
  # based on the system, define where the acis libraries are
  IF(CMAKE_SYSTEM MATCHES "Linux")
  SET(ACIS_ARCH linux)
    IF(BUILD_64)
      SET (ACIS_SYSTEM linux_amd_64_so)
    ELSE(BUILD_64)
      SET (ACIS_SYSTEM linux_so)
    ENDIF(BUILD_64)
  ENDIF(CMAKE_SYSTEM MATCHES "Linux")

 IF(CMAKE_SYSTEM MATCHES "Darwin")
  SET(ACIS_SYSTEM macho)
  SET(ACIS_ARCH mac)
  ENDIF(CMAKE_SYSTEM MATCHES "Darwin")


  IF(CMAKE_SYSTEM MATCHES "SunOS")
  SET(ACIS_SYSTEM solaris_so)
  SET(ACIS_ARCH solaris)
  ENDIF(CMAKE_SYSTEM MATCHES "SunOS")

  IF(CMAKE_SYSTEM MATCHES "IRIX")
    SET(ACIS_ARCH sgi)
    IF(BUILD_64)
      SET (ACIS_SYSTEM sgi_64_so)
    ELSE(BUILD_64)
      SET (ACIS_SYSTEM sgi_so)
    ENDIF(BUILD_64)
  ENDIF(CMAKE_SYSTEM MATCHES "IRIX")

  IF(CMAKE_SYSTEM MATCHES "HP-UX")
  SET(ACIS_ARCH hp700)
  SET(ACIS_SYSTEM hp700_11_so)
  ENDIF(CMAKE_SYSTEM MATCHES "HP-UX")

  SET (ACIS_LIBRARY_DIR ${ACIS_DIR}/bin/${ACIS_SYSTEM})
ENDIF(UNIX)

ADD_DEFINITIONS(-DACIS_3D -DACIS_LOCAL_OPS)
ADD_DEFINITIONS(-DACIS${ACIS_VERSION} -DCUBIT_ACIS_VERSION=${ACIS_VERSION})
IF(UNIX)
  ADD_DEFINITIONS(-DPOINT_VERSION=0 -DCXX30 -DAGVER=105 -DANSI -DNO_DTORS)
  ADD_DEFINITIONS(-D${ACIS_ARCH} -D${ACIS_SYSTEM})
ENDIF(UNIX)
IF(WIN32)
  ADD_DEFINITIONS(-DACIS_DLL -DSPA_NO_AUTO_LINK)
ENDIF(WIN32)


